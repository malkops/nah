volumes:
  data:
  prometheus_data:
  grafana_data:
  data01:
    driver: local

services:
  storage:
    image: minio/minio:latest
    command: server /data
    restart: always
    expose: 
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - storage
    restart: on-failure
    entrypoint: > 
      /bin/sh -c "
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc anonymous set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "

  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose: 
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-STORAGE_BUCKET}
  
  security:
    build: ./security
    expose: 
      - 3000
    environment:
      PORT: 3000

  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"
    depends_on:
      - storage
      - uploader
      - security

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: es01
    environment:
      - node.name=es01
      - discovery.type=single-node
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTICSEARCH_PASSWORD=jopa
      - xpack.security.enabled=true
    command: > 
      /bin/bash -c "elasticsearch-users useradd superuser 
      -p qwerty123456 -r superuser;
      elasticsearch-users useradd admin 
      -p qwerty123456 -r superuser;
      docker-entrypoint.sh"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    expose:
      - 9200

  kibana:
    image: kibana:7.17.13
    ports:
      - 8081:5601
    environment:
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
      ELASTICSEARCH_USERNAME: superuser
      ELASTICSEARCH_PASSWORD: qwerty123456
      xpack.security.enabled: 'true'
    depends_on:
      - es01

  # vector:
  #   image: timberio/vector:0.32.2-debian
  #   volumes:
  #       - ./vector/vector.toml:/etc/vector/vector.toml:ro
  #       - /var/run/docker.sock:/var/run/docker.sock
  #       - /var/lib/docker:/var/lib/docker
  #   environment:
  #     - ECTOR_OPENSSL_LEGACY_PROVIDER=false

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=qwerty123456

  prometheus:
    image: prom/prometheus:v2.46.0
    ports:
     - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
